<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Icon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFIAAAA/CAMAAABEmG8tAAAABGdBTUEAALGPC/xhBQAAAE5QTFRFuC0A
        0HRW7s3DxlQv9N3Vvj8VtyoA////tysA+Onj462buzUJ3ZuEy2RC1oVq+vDt68S3/fj257amw00m4KKO
        ujIF8dXL031g5bGg2pJ6sMh+AwAAApFJREFUWEfN1tuyoyAQBVDwBgTBu8b//9EpOaLQKA11Zqpm582O
        K9AghrC/HgIv/D7/ATnAC2EyyW6b4aUgeWRHuUTNLLKjhBDUzCGNSBbMzCCFEfFxppOXiI0zmbxFbJyp
        pCfGzURSUO6RMTONDMSYmUQ+iBEzhTzEwOSvz1ECKVTT1PoDokiztI+HCE4OH6VoD6+yrlWKFvDqEUt2
        Ihpw15HhrXCSA51iKedgitVmKg9zt2TZ8FgWpbVu5zO71nr6KcjQvMhgSf3wRurKtqFX/Pp6aFqyH7G4
        S9E51/tXEm6SIO6tYnQro4/evfQnGkZuq6jMR/SlX/Hnnrg8nPOm3u2wKPFLy+6altxKLOre7t0Mi+Mt
        pm51IUTn3MVgUTjDtKPUCstWXTcNIywqdfczuZdNM7XfM5sMvt3c/Uwm+UL79cznfHTcNMSalvy2WL5O
        M6sZVo+cZ4hdnrXAcreSseHx6z45qEUiqVvRnVkpLEopFwpI/OlppLbTdU4NG86VPTuvUdZYpm83nBEa
        FuvajvHupaiweAc4LFbrvXh2lLPGYhf0yAqL7rvp7iUWUo5Ff3z6oq1B7epjLvntz+yAvPvokjvFsjv3
        9Ztb0f57Mn15/JPIKby9KPBNVI4D+9lDTOzOde39ln9swN3rpS5LtduX7nFe28PI76NLqiUWSVfzJArz
        MRlLUwnFiyzsaj6mgP062mkqcNbO8kTSz/MnHAsr5nl2T6crKeR0bHNniU3a+qmPRxJIVkycS2eNTQgn
        9GHWieRhwh1AyJuYRj6ab2Ii+WC+iqlkYL6LyaRv8u1dTCc9MyZmkGy9zKiYQ15mXMwi2Wr+0SNiHmlM
        TMwk2VqiYi7J/H+uj8klE/IPyD+G6ZbRRFBjfwAAAABJRU5ErkJggg==
</value>
  </data>
</root>